" source
" source $HOME/.config/nvim/vim-plug/plugins.vim
" source $HOME/.config/nvim/general/settings.vim
" source $HOME/.config/nvim/keys/mappings.vim
      " source $HOME/.config/nvim/keys/spacemap.vim
      " source $HOME/.config/nvim/themes/gruvbox-material.vim
      " source $HOME/.config/nvim/general/paths.vim
source $HOME/.config/nvim/plug-config/coc.vim
source $HOME/.config/nvim/plug-config/start-screen.vim
" source $HOME/.config/nvim/themes/airline.vim
" source $HOME/.config/nvim/themes/gruvbox-material.vim

lua require('init')


  let g:coc_filetype_map = {
      \ 'asciidoc': 'markdown',
      \ 'vimwiki': 'markdown',
      \ 'vimwiki.markdown': 'markdown',
      \ 'vimwiki.markdown.pandoc': 'markdown',
      \ 'asciidoctor': 'markdown',
\ }


autocmd BufRead,BufNewFile /tmp/calcurse*,~/.calcurse/notes/*
      \ set filetype=markdown
autocmd BufRead,BufNewFile *.ms,*.me,*.mom,*.man set filetype=groff
autocmd BufRead,BufNewFile *.tex set filetype=tex

autocmd! FileType help :wincmd L | :vert resize 80


" au FileType vimwiki.markdown set filetype=markdown

" au FileType vimwiki set syntax=asciidoc.vimwiki
" au FileType vimwiki set filetype=asciidoc.markdown
" au BufRead,BufNewFile FileType vimwiki set filetype=markdown
" au FileType vimwiki set filetype=markdown
" au FileType vimwiki set syntax=markdown


" au FileType vimwiki BufNewFile,BufFilePre,BufRead set filetype=markdown.pandoc

" au FileType asciidoc iunmap <buffer> <tab>
" let g:vimwiki_table_mappings = 0

function! s:cocActionsOpenFromSelected(type) abort
  execute 'CocCommand actions.open ' . a:type
endfunction
xmap <silent> <leader>a :<C-u>execute 'CocCommand actions.open ' . visualmode()<cr>
nmap <silent> <leader>a :<C-u>set operatorfunc=<SID>cocActionsOpenFromSelected<cr>g@


" let g:vimwiki_list = [{'syntax': 'default',
      " \ 'ext': '.md'}]


" source $HOME/.config/nvim/themes/gruvbox-material.vim


noremap <a-n> zk

  " augroup VimrcAuGroup
    " autocmd!
    " autocmd FileType vimwiki setlocal foldmethod=expr |
      " \ setlocal foldenable | set foldexpr=VimwikiFoldLevelCustom(v:lnum)
  " augroup END

" let g:pandoc#filetypes#handled = ["pandoc", "markdown"]
" let g:pandoc#filetypes#pandoc_markdown = 0


" au! BufNewFile,BufFilePre,BufRead *.md set foldexpr=Foldexpr_markdown(v:lnum)
" augroup pandoc_syntax
    " au! BufNewFile,BufFilePre,BufRead *.md set filetype=markdown.pandoc
" augroup END

" au BufWinEnter *.md set updatetime=300 | set ft=markdown | set autoread
" au BufWinEnter *.md set foldexpr=Foldexpr_markdown(v:lnum)
" au CursorHold *.md  checktime
" au BufRead,BufNewFile * if &ft == 'vimwiki' | set ft=markdown | endif
" au BufRead,BufNewFile * if &ft == 'vimwiki.markdown' | set ft=markdown | endif
" autocmd! FileType markdown set foldmethod=expr
"
"
autocmd VimResized * wincmd =
"
"
